{"version":3,"sources":["webpack:///./src/zenroom/pbkdf_decrypt.keys","webpack:///./src/views/zenroom.vue?5d38","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator.js","webpack:///./src/zenroom/pbkdf_encrypt.keys","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/zenroom/pbkdf_encrypt.lua","webpack:///./src/zenroom/pbkdf_decrypt.lua","webpack:///./src/views/zenroom.vue?ade2","webpack:///src/views/zenroom.vue","webpack:///./src/views/zenroom.vue?1cc1","webpack:///./src/views/zenroom.vue","webpack:///./src/views/showID.vue?f3e3","webpack:///./src/services/tmpdata.js","webpack:///src/views/showID.vue","webpack:///./src/views/showID.vue?18b2","webpack:///./src/views/showID.vue"],"names":["module","exports","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_zenroom_vue_vue_type_style_index_0_id_de520ee4_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_zenroom_vue_vue_type_style_index_0_id_de520ee4_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","_asyncToGenerator","fn","self","this","args","arguments","Promise","resolve","reject","gen","apply","step","key","arg","info","value","error","done","then","_next","_throw","err","d","__webpack_exports__","global","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootEntry","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","obj","invoke","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegateResult","maybeInvokeDelegate","return","TypeError","pushTryEntry","locs","iteratorMethod","Function","render","_vm","_h","$createElement","_c","_self","staticClass","on","click","$event","run","_v","_s","encrypted","decrypted","staticRenderFns","zenroomvue_type_script_lang_js_","data","inputEncrypted","methods","setEncryptedData","_setEncryptedData","asyncToGenerator","_callee","_context","_this","window","Module","objectSpread","exec_ok","exec_error","pbkdfEncrypt","print","text","zenroom_pbkdf_encrypt_default","a","conf","script","pbkdf_encrypt_default","ccall","pbkdfDecrypt","zenroom_pbkdf_decrypt_default","pbkdf_decrypt_default","mounted","watch","views_zenroomvue_type_script_lang_js_","component","componentNormalizer","options","__file","attrs","src","image","_e","showIDvue_type_script_lang_js_","computed","components","JSON","parse","image_base64","views_showIDvue_type_script_lang_js_"],"mappings":"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","file":"js/zenroom.7f47111a.js","sourcesContent":["module.exports = \"{\\n\\t\\\"pin\\\": \\\"12345\\\",\\n\\t\\\"salt\\\": \\\"c6e49670a3c65d7f19ee7d39a25478900f8e98ec1e9a82131e23e7b07d17c0c9\\\",\\n\\t\\\"kdf_iterations\\\": 50000\\n}\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zenroom.vue?vue&type=style&index=0&id=de520ee4&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zenroom.vue?vue&type=style&index=0&id=de520ee4&scoped=true&lang=css&\"","export default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n\n      function _next(value) {\n        step(\"next\", value);\n      }\n\n      function _throw(err) {\n        step(\"throw\", err);\n      }\n\n      _next();\n    });\n  };\n}","module.exports = \"{\\n\\t\\\"pin\\\": \\\"12345\\\",\\n\\t\\\"text\\\": \\\"my private declaration or certificate of sorts\\\",\\n\\t\\\"salt\\\": \\\"c6e49670a3c65d7f19ee7d39a25478900f8e98ec1e9a82131e23e7b07d17c0c9\\\",\\n\\t\\\"kdf_iterations\\\": 50000\\n}\"","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","module.exports = \"----- Symmetric encryption (AES-GCM/AEAD) using PBKDF2\\n\\n-- This example demonstrates how to take a secret and encrypt it using\\n-- a single password, even a small 4 digit PIN.\\n\\n\\nsecrets = JSON.decode(KEYS)\\n\\necdh = ECDH.new()\\nkey = ECDH.pbkdf2(ecdh, str(secrets.pin), str(secrets.salt), secrets.kdf_iterations, 32)\\n\\nrng = RNG.new()\\nlocal cipher = { header = str(\\\"my header\\\"),\\n\\t\\t\\t\\t iv = rng:octet(16) }\\ncipher.text, cipher.checksum =\\n   ECDH.encrypt(key, str(secrets.text),\\n\\t\\t\\t\\t\\t cipher.iv, cipher.header)\\n\\n\\noutput = map(cipher, hex)\\nprint(JSON.encode(output))\"","module.exports = \"----- Symmetric encryption (AES-GCM/AEAD) using PBKDF2\\n\\n-- This example demonstrates how to take a secret and encrypt it using\\n-- a single password, even a small 4 digit PIN.\\n\\nsecrets = JSON.decode(KEYS)\\n\\necdh = ECDH.new()\\nkey = ECDH.pbkdf2(ecdh, str(secrets.pin), str(secrets.salt), secrets.kdf_iterations, 32)\\n\\n-- receiver's stage\\n-- pin is again provided, kdf is ran so secret key is there\\n\\ndata = JSON.decode(DATA)\\ncipher = map(data, hex)\\n\\nlocal decode = { header = cipher.header }\\ndecode.text, decode.checksum =\\n   ECDH.decrypt(key, cipher.text,\\n                     cipher.iv, cipher.header)\\n\\n-- print(cipher.checksum, decode.checksum)\\n\\n-- this needs to be checked, can also be in the host application\\n-- if checksums are different then the data integrity is corrupted\\nassert(decode.checksum == cipher.checksum)\\n\\n-- print(decode.header:str()\\nprint(decode.text:str())\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"has-text-centered\"},[_c('button',{staticClass:\"button\",on:{\"click\":function($event){_vm.run('encrypt')}}},[_vm._v(\"Encrypt with PBKDF\")]),_c('br'),_c('div',[_vm._v(\"Result\\n    \"),_c('pre',[_vm._v(_vm._s(_vm.encrypted))])]),_c('br'),_c('button',{staticClass:\"button\",on:{\"click\":function($event){_vm.run('decrypt')}}},[_vm._v(\"Decrypt with PBKDF\")]),_c('br'),_c('div',[_vm._v(\"Result\\n    \"),_c('pre',[_vm._v(_vm._s(_vm.decrypted))])]),_c('br'),_c('div',[_vm._v(\"Last result: \"+_vm._s(_vm.result))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"has-text-centered\">\n    <button class=\"button\" @click=\"run('encrypt')\">Encrypt with PBKDF</button>\n    <br>\n    <div>Result\n      <pre>{{encrypted}}</pre>\n    </div>\n    <br>\n\n    <!-- <div class=\"control\">\n          <input class=\"input\" type=\"text\" placeholder=\"Encrypted data\"\n            v-model=\"inputEncrypted\" @change=\"setEncryptedData\">\n        </div>\n    <br>-->\n    <button class=\"button\" @click=\"run('decrypt')\">Decrypt with PBKDF</button>\n    <br>\n    <div>Result\n      <pre>{{decrypted}}</pre>\n    </div>\n    <br>\n\n    <div>Last result: {{result}}</div>\n  </div>\n</template>\n\n<script>\nimport _pbkdf_encrypt from \"raw-loader!../zenroom/pbkdf_encrypt.lua\";\nimport _pbkdf_encrypt_keys from \"raw-loader!../zenroom/pbkdf_encrypt.keys\";\nimport _pbkdf_decrypt from \"raw-loader!../zenroom/pbkdf_decrypt.lua\";\nimport _pbkdf_decrypt_keys from \"raw-loader!../zenroom/pbkdf_decrypt.keys\";\n\nexport default {\n  name: \"zenroom\",\n  data() {\n    return {\n      result: \"\",\n      encrypted: \"\",\n      decrypted: \"\",\n      inputEncrypted: \"\"\n    };\n  },\n  methods: {\n    async setEncryptedData() {\n      this.encrypted = this.inputEncrypted;\n    },\n    run(method) {\n      window.Module = {\n        ...window.Module,\n        exec_ok: () => (this.result += \"ok \"),\n        exec_error: () => (this.result += \"error \")\n      };\n\n      const pbkdfEncrypt = () => {\n        window.Module.print = text => (this.encrypted = text);\n\n        const keys = _pbkdf_encrypt_keys;\n        const data = null;\n        const conf = null;\n        const script = _pbkdf_encrypt;\n\n        window.Module.ccall(\n          \"zenroom_exec\",\n          \"number\",\n          [\"string\", \"string\", \"string\", \"string\", \"number\"],\n          [script, conf, keys, data, 1]\n        );\n      };\n\n      const pbkdfDecrypt = () => {\n        window.Module.print = text => (this.decrypted = text);\n\n        const keys = _pbkdf_decrypt_keys;\n        const data = this.encrypted;\n        const conf = null;\n        const script = _pbkdf_decrypt;\n\n        window.Module.ccall(\n          \"zenroom_exec\",\n          \"number\",\n          [\"string\", \"string\", \"string\", \"string\", \"number\"],\n          [script, conf, keys, data, 1]\n        );\n      };\n\n      if (method === \"encrypt\") {\n        pbkdfEncrypt();\n      } else if (method === \"decrypt\") {\n        pbkdfDecrypt();\n      }\n    }\n  },\n  mounted() {},\n  watch: {}\n};\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zenroom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./zenroom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./zenroom.vue?vue&type=template&id=de520ee4&scoped=true&\"\nimport script from \"./zenroom.vue?vue&type=script&lang=js&\"\nexport * from \"./zenroom.vue?vue&type=script&lang=js&\"\nimport style0 from \"./zenroom.vue?vue&type=style&index=0&id=de520ee4&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"de520ee4\",\n  null\n  \n)\n\ncomponent.options.__file = \"zenroom.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"ID\\n  \"),(_vm.data)?_c('div',[_c('pre',[_vm._v(_vm._s(_vm.data[0]))]),_c('img',{attrs:{\"src\":'data:image/jpeg;base64,'+_vm.image}})]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const data = null","<template>\n  <div>ID\n    <div v-if=\"data\">\n      <pre>{{data[0]}}</pre>\n      <img v-bind:src=\"'data:image/jpeg;base64,'+image\">\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport { data } from \"../services/tmpdata\";\n\nexport default {\n  name: \"showID\",\n  data() {\n    return {\n      data: null,\n      image: null\n    };\n  },\n  computed: {},\n  components: {},\n  methods: {},\n  mounted() {\n    this.data = JSON.parse(data.data);\n    this.image = this.data[1].image_base64;\n  }\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./showID.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./showID.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./showID.vue?vue&type=template&id=367caa7c&\"\nimport script from \"./showID.vue?vue&type=script&lang=js&\"\nexport * from \"./showID.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"showID.vue\"\nexport default component.exports"],"sourceRoot":""}